package day6

import (
	"bufio"
	"fmt"
	"os"
	"strings"
	"time"
)

//Generated by AoC helper tool 🎄
//In order to get started, extend main.go so it discovers and runs this file as well

type Day6Solver struct{}

func (d Day6Solver) Solve(filename string, answerChan chan int, doneChan chan bool, errorChan chan error) {
	start := time.Now()
	defer close(answerChan)
	defer close(errorChan)
	defer close(doneChan)
	file, err := os.Open(filename)

	if err != nil {
		errorChan <- err
	}

	defer file.Close()

	scanner := bufio.NewScanner(file)

	content := ""

	for scanner.Scan() {
		text := scanner.Text()
		if len(text) == 0 {
			content += scanner.Text() + "\n"
		} else {
			content += scanner.Text() + "#"
		}
	}

	forms := strings.Split(content, "\n")

	uniqueAnswer := 0
	everyAnswer := 0

	for _, form := range forms {
		uniqueMap := make(map[rune]int)
		var result []rune

		for _, val := range form {
			if _, exists := uniqueMap[val]; !exists {
				uniqueMap[val] = 1
				result = append(result, val)
			} else {
				uniqueMap[val] += 1
			}
		}

		for k, v := range uniqueMap {
			if v == strings.Count(form, "#") {
				if k != '#' {
					everyAnswer++
				}
			}
		}

		uniqueAnswer += len(result) - 1
	}

	answerChan <- uniqueAnswer
	answerChan <- everyAnswer

	end := time.Now()
	elapsed := end.Sub(start)
	fmt.Printf("\n\n⏱️ Execution took %v time! ⏱️\n\n", elapsed)

	time.Sleep(time.Second)
	doneChan <- true
}
